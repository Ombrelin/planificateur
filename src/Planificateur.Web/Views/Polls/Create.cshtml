@{
    Layout = "Layout";
    ViewData["Title"] = "Create Poll";
}

<div class="center">
    <form action="/polls/create" method="post" class="box">
        <h1 class="title">Create Poll</h1>

        @if (ViewBag.Errors is not null)
        {
            <div class="notification is-danger">
                <ul>


                    @foreach (var message in ViewBag.Errors)
                    {
                        <li>@message</li>
                    }
                </ul>
            </div>
        }

        <div class="field">
            <label class="label">Poll Name : </label>
            <div class="control">
                <input class="input" type="text" name="name"/>
            </div>
        </div>

        <div id="dates" style="max-height: 60vh; overflow-y: auto; overflow-x: hidden">
            <div class="field">
                <label class="label">Poll Dates : </label>
                <div class="control">
                    <input class="input" type="date" name="dates[]"/>
                </div>
            </div>
        </div>

        <br/>

        <button type="button" id="add-date" onclick="addDate()" class="button">Add date</button>
        <button type="submit" id="create" class="button is-primary">Create</button>

    </form>

</div>
<script>

const addDate = () => {
    const dates = document.querySelector("#dates");
    const dateInput = document.createElement("input");
    dates.innerHTML += `
        <div class="columns">
            <div class="field column is-three-quarters">
                <div class="control">
                    <input class="input" type="date" name="dates[]"/>
                </div>
            </div>
            <div class="column">
                <button onclick="removeDate(this)" class="button is-danger">âž–</button>
            </div>
            
        </div>
    `;
}

const removeDate = (element) => {
    element.parentNode.parentNode.remove(element);
}

</script>